<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classFoamAdapter_1_1MeshAdapter" kind="class" language="C++" prot="public">
    <compoundname>FoamAdapter::MeshAdapter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Foam::fvMesh</basecompoundref>
    <includes refid="meshAdapter_8hpp" local="no">meshAdapter.hpp</includes>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classFoamAdapter_1_1MeshAdapter_1ab0b515251235effaa7476e4bd97dfcbc" prot="private" static="no">
        <type>Foam::word</type>
        <definition>using FoamAdapter::MeshAdapter::word =  Foam::word</definition>
        <argsstring></argsstring>
        <name>word</name>
        <qualifiedname>FoamAdapter::MeshAdapter::word</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="32" column="5" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classFoamAdapter_1_1MeshAdapter_1a6c56c1cdbd4a7a66003a1eded9837af2" prot="private" static="no" mutable="no">
        <type>NeoN::UnstructuredMesh</type>
        <definition>NeoN::UnstructuredMesh FoamAdapter::MeshAdapter::nfMesh_</definition>
        <argsstring></argsstring>
        <name>nfMesh_</name>
        <qualifiedname>FoamAdapter::MeshAdapter::nfMesh_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="34" column="28" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1af3788cccd2e03da95321f91da0b7fb50" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::MeshAdapter::MeshAdapter</definition>
        <argsstring>(const MeshAdapter &amp;)=delete</argsstring>
        <name>MeshAdapter</name>
        <qualifiedname>FoamAdapter::MeshAdapter::MeshAdapter</qualifiedname>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> <ref refid="classFoamAdapter_1_1MeshAdapter" kindref="compound">MeshAdapter</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="39" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1a1572f0b3e932f09f2191feee52b53465" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">void</ref></type>
        <definition>void FoamAdapter::MeshAdapter::operator=</definition>
        <argsstring>(const MeshAdapter &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>FoamAdapter::MeshAdapter::operator=</qualifiedname>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> <ref refid="classFoamAdapter_1_1MeshAdapter" kindref="compound">MeshAdapter</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="42" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1a546685a63fcd87c4b8c55ba53e2e30bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::MeshAdapter::TypeName</definition>
        <argsstring>(&quot;MeshAdapter&quot;)</argsstring>
        <name>TypeName</name>
        <qualifiedname>FoamAdapter::MeshAdapter::TypeName</qualifiedname>
        <param>
          <type>&quot;MeshAdapter&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="47" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1a10b8a57d8f82a5a3d9d59766e0256c4e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::MeshAdapter::MeshAdapter</definition>
        <argsstring>(const NeoN::Executor exec, const Foam::IOobject &amp;io, const bool doInit=true)</argsstring>
        <name>MeshAdapter</name>
        <qualifiedname>FoamAdapter::MeshAdapter::MeshAdapter</qualifiedname>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::Executor</type>
          <declname>exec</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> Foam::IOobject &amp;</type>
          <declname>io</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">bool</ref></type>
          <declname>doInit</declname>
          <defval><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="52" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1a29f8fbec747649e3cb48b9d9b1d8de3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::MeshAdapter::MeshAdapter</definition>
        <argsstring>(const NeoN::Executor exec, const Foam::IOobject &amp;io, const Foam::zero, bool syncPar=true)</argsstring>
        <name>MeshAdapter</name>
        <qualifiedname>FoamAdapter::MeshAdapter::MeshAdapter</qualifiedname>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::Executor</type>
          <declname>exec</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> Foam::IOobject &amp;</type>
          <declname>io</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> Foam::zero</type>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">bool</ref></type>
          <declname>syncPar</declname>
          <defval><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="56" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1aee3809a660b6cbba97e0edb3e9607698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::MeshAdapter::MeshAdapter</definition>
        <argsstring>(const NeoN::Executor exec, const Foam::IOobject &amp;io, Foam::pointField &amp;&amp;points, Foam::faceList &amp;&amp;faces, Foam::labelList &amp;&amp;allOwner, Foam::labelList &amp;&amp;allNeighbour, const bool syncPar=true)</argsstring>
        <name>MeshAdapter</name>
        <qualifiedname>FoamAdapter::MeshAdapter::MeshAdapter</qualifiedname>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::Executor</type>
          <declname>exec</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> Foam::IOobject &amp;</type>
          <declname>io</declname>
        </param>
        <param>
          <type>Foam::pointField &amp;&amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>Foam::faceList &amp;&amp;</type>
          <declname>faces</declname>
        </param>
        <param>
          <type>Foam::labelList &amp;&amp;</type>
          <declname>allOwner</declname>
        </param>
        <param>
          <type>Foam::labelList &amp;&amp;</type>
          <declname>allNeighbour</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">bool</ref></type>
          <declname>syncPar</declname>
          <defval><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="60" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1a6894712164d8776b008720d3a7e5f72f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::MeshAdapter::MeshAdapter</definition>
        <argsstring>(const NeoN::Executor exec, const Foam::IOobject &amp;io, Foam::pointField &amp;&amp;points, Foam::faceList &amp;&amp;faces, Foam::cellList &amp;&amp;cells, const bool syncPar=true)</argsstring>
        <name>MeshAdapter</name>
        <qualifiedname>FoamAdapter::MeshAdapter::MeshAdapter</qualifiedname>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::Executor</type>
          <declname>exec</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> Foam::IOobject &amp;</type>
          <declname>io</declname>
        </param>
        <param>
          <type>Foam::pointField &amp;&amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>Foam::faceList &amp;&amp;</type>
          <declname>faces</declname>
        </param>
        <param>
          <type>Foam::cellList &amp;&amp;</type>
          <declname>cells</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">bool</ref></type>
          <declname>syncPar</declname>
          <defval><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">true</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="72" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1a6cc73499d214ab3d938ec79f3df69724" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual FoamAdapter::MeshAdapter::~MeshAdapter</definition>
        <argsstring>()=default</argsstring>
        <name>~MeshAdapter</name>
        <qualifiedname>FoamAdapter::MeshAdapter::~MeshAdapter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="82" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1a05e872a8e76a491cf191887032c65ac2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NeoN::UnstructuredMesh &amp;</type>
        <definition>NeoN::UnstructuredMesh &amp; FoamAdapter::MeshAdapter::nfMesh</definition>
        <argsstring>()</argsstring>
        <name>nfMesh</name>
        <qualifiedname>FoamAdapter::MeshAdapter::nfMesh</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="84" column="28" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1a4b9a8243377dd4ccdb55b52e21305d5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::UnstructuredMesh &amp;</type>
        <definition>const NeoN::UnstructuredMesh &amp; FoamAdapter::MeshAdapter::nfMesh</definition>
        <argsstring>() const</argsstring>
        <name>nfMesh</name>
        <qualifiedname>FoamAdapter::MeshAdapter::nfMesh</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="86" column="34" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1MeshAdapter_1a4df45052e509fd4d52fc6120ae02c525" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::Executor</type>
        <definition>const NeoN::Executor FoamAdapter::MeshAdapter::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>FoamAdapter::MeshAdapter::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="88" column="26" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Foam::fvMesh</label>
      </node>
      <node id="1">
        <label>FoamAdapter::MeshAdapter</label>
        <link refid="classFoamAdapter_1_1MeshAdapter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Foam::fvMesh</label>
      </node>
      <node id="1">
        <label>FoamAdapter::MeshAdapter</label>
        <link refid="classFoamAdapter_1_1MeshAdapter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" line="30" column="1" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/meshAdapter.hpp" bodystart="31" bodyend="89"/>
    <listofallmembers>
      <member refid="classFoamAdapter_1_1MeshAdapter_1a4df45052e509fd4d52fc6120ae02c525" prot="public" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>exec</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1af3788cccd2e03da95321f91da0b7fb50" prot="private" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>MeshAdapter</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1a10b8a57d8f82a5a3d9d59766e0256c4e" prot="public" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>MeshAdapter</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1a29f8fbec747649e3cb48b9d9b1d8de3b" prot="public" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>MeshAdapter</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1aee3809a660b6cbba97e0edb3e9607698" prot="public" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>MeshAdapter</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1a6894712164d8776b008720d3a7e5f72f" prot="public" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>MeshAdapter</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1a05e872a8e76a491cf191887032c65ac2" prot="public" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>nfMesh</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1a4b9a8243377dd4ccdb55b52e21305d5a" prot="public" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>nfMesh</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1a6c56c1cdbd4a7a66003a1eded9837af2" prot="private" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>nfMesh_</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1a1572f0b3e932f09f2191feee52b53465" prot="private" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>operator=</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1a546685a63fcd87c4b8c55ba53e2e30bb" prot="public" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>TypeName</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1ab0b515251235effaa7476e4bd97dfcbc" prot="private" virt="non-virtual"><scope>FoamAdapter::MeshAdapter</scope><name>word</name></member>
      <member refid="classFoamAdapter_1_1MeshAdapter_1a6cc73499d214ab3d938ec79f3df69724" prot="public" virt="virtual"><scope>FoamAdapter::MeshAdapter</scope><name>~MeshAdapter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
