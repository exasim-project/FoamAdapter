<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classFoamAdapter_1_1Expression" kind="class" language="C++" prot="public">
    <compoundname>FoamAdapter::Expression</compoundname>
    <includes refid="expression_8hpp" local="no">expression.hpp</includes>
    <innerclass refid="structFoamAdapter_1_1Expression_1_1SetReference" prot="public">FoamAdapter::Expression::SetReference</innerclass>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
      <param>
        <type>typename IndexType</type>
        <defval>NeoN::localIdx</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classFoamAdapter_1_1Expression_1ab44df57ad5332bf2175516a9f482ba6d" prot="private" static="no">
        <type>NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt;</type>
        <definition>using FoamAdapter::Expression&lt; ValueType, IndexType &gt;::VolumeField =  NeoN::finiteVolume::cellCentred::VolumeField&lt;ValueType&gt;</definition>
        <argsstring></argsstring>
        <name>VolumeField</name>
        <qualifiedname>FoamAdapter::Expression::VolumeField</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="24" column="5" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1a84ef45e5193a61c0a1d4a12494f4bb99" prot="private" static="no" mutable="no">
        <type>VolumeField &amp;</type>
        <definition>VolumeField&amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::psi_</definition>
        <argsstring></argsstring>
        <name>psi_</name>
        <qualifiedname>FoamAdapter::Expression::psi_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="142" column="17" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1aa9db9fee102366444c7d36952e42af16" prot="private" static="no" mutable="no">
        <type>dsl::Expression&lt; ValueType &gt;</type>
        <definition>dsl::Expression&lt;ValueType&gt; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::expr_</definition>
        <argsstring></argsstring>
        <name>expr_</name>
        <qualifiedname>FoamAdapter::Expression::expr_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="143" column="21" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1a9e9a5051707454ae6e20accb3b5d0087" prot="private" static="no" mutable="no">
        <type>const <ref refid="structFoamAdapter_1_1RunTime" kindref="compound">RunTime</ref> &amp;</type>
        <definition>const RunTime&amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::runTime_</definition>
        <argsstring></argsstring>
        <name>runTime_</name>
        <qualifiedname>FoamAdapter::Expression::runTime_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="144" column="19" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1ac2d758fab6b59809217c93f8be7d86d9" prot="private" static="no" mutable="no">
        <type>const NeoN::la::SparsityPattern &amp;</type>
        <definition>const NeoN::la::SparsityPattern&amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::sparsityPattern_</definition>
        <argsstring></argsstring>
        <name>sparsityPattern_</name>
        <qualifiedname>FoamAdapter::Expression::sparsityPattern_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="145" column="37" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1ae749b759232256cbf291955529041049" prot="private" static="no" mutable="no">
        <type>NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;</type>
        <definition>NeoN::la::LinearSystem&lt;ValueType, IndexType&gt; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::ls_</definition>
        <argsstring></argsstring>
        <name>ls_</name>
        <qualifiedname>FoamAdapter::Expression::ls_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="146" column="28" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1a643038f7994223fcedc283e5933617ad" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool FoamAdapter::Expression&lt; ValueType, IndexType &gt;::needReference_</definition>
        <argsstring></argsstring>
        <name>needReference_</name>
        <qualifiedname>FoamAdapter::Expression::needReference_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="148" column="10" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1a2b89c32573b0ef5db15d21a3a77c550b" prot="private" static="no" mutable="no">
        <type>NeoN::localIdx</type>
        <definition>NeoN::localIdx FoamAdapter::Expression&lt; ValueType, IndexType &gt;::pRefCell_</definition>
        <argsstring></argsstring>
        <name>pRefCell_</name>
        <qualifiedname>FoamAdapter::Expression::pRefCell_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="149" column="20" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1ab6fe2c8fd03041c6d4905327ae91708e" prot="private" static="no" mutable="no">
        <type>NeoN::scalar</type>
        <definition>NeoN::scalar FoamAdapter::Expression&lt; ValueType, IndexType &gt;::pRefValue_</definition>
        <argsstring></argsstring>
        <name>pRefValue_</name>
        <qualifiedname>FoamAdapter::Expression::pRefValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="150" column="18" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a12e4c8ac5f3f70fbb35c4ff4576ccee6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::Expression&lt; ValueType, IndexType &gt;::Expression</definition>
        <argsstring>(dsl::Expression&lt; ValueType &gt; expr, VolumeField &amp;psi, const RunTime &amp;runTime)</argsstring>
        <name>Expression</name>
        <qualifiedname>FoamAdapter::Expression::Expression</qualifiedname>
        <param>
          <type>dsl::Expression&lt; ValueType &gt;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>VolumeField &amp;</type>
          <declname>psi</declname>
        </param>
        <param>
          <type>const <ref refid="structFoamAdapter_1_1RunTime" kindref="compound">RunTime</ref> &amp;</type>
          <declname>runTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="29" column="5" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="29" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a20227f6f2989729b84237dbae9c8a71d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::Expression&lt; ValueType, IndexType &gt;::Expression</definition>
        <argsstring>(const Expression &amp;expr)</argsstring>
        <name>Expression</name>
        <qualifiedname>FoamAdapter::Expression::Expression</qualifiedname>
        <param>
          <type>const <ref refid="classFoamAdapter_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="47" column="5" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a8b2c4ff8f856720be0d862b2092c4b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::Expression&lt; ValueType, IndexType &gt;::~Expression</definition>
        <argsstring>()=default</argsstring>
        <name>~Expression</name>
        <qualifiedname>FoamAdapter::Expression::~Expression</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="54" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a81d5718d028b71ee22ff2a259d4d30dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>VolumeField &amp;</type>
        <definition>VolumeField &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::getField</definition>
        <argsstring>()</argsstring>
        <name>getField</name>
        <qualifiedname>FoamAdapter::Expression::getField</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="56" column="17" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a0ce11c16c1f569c2a3c87348d8c124b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const VolumeField &amp;</type>
        <definition>const VolumeField &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::getField</definition>
        <argsstring>() const</argsstring>
        <name>getField</name>
        <qualifiedname>FoamAdapter::Expression::getField</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="58" column="23" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a855cf32c23315ea3cc202e7bb1cd89d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const NeoN::la::SparsityPattern &amp;</type>
        <definition>const NeoN::la::SparsityPattern &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::sparsityPattern</definition>
        <argsstring>() const</argsstring>
        <name>sparsityPattern</name>
        <qualifiedname>FoamAdapter::Expression::sparsityPattern</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="63" column="39" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a16c7d18b9f295ae6ceb255def5c6d5fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NeoN::la::LinearSystem&lt; ValueType, IndexType &gt; &amp;</type>
        <definition>NeoN::la::LinearSystem&lt; ValueType, IndexType &gt; &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::linearSystem</definition>
        <argsstring>()</argsstring>
        <name>linearSystem</name>
        <qualifiedname>FoamAdapter::Expression::linearSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="68" column="29" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a1531aefa9f947598726d237b7a810414" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const NeoN::la::LinearSystem&lt; ValueType, IndexType &gt; &amp;</type>
        <definition>const NeoN::la::LinearSystem&lt; ValueType, IndexType &gt; &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::linearSystem</definition>
        <argsstring>() const</argsstring>
        <name>linearSystem</name>
        <qualifiedname>FoamAdapter::Expression::linearSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="70" column="35" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a6024ec042022f9f5ea7cfd0abf9c9df7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NeoN::la::LinearSystem&lt; ValueType, IndexType &gt; &amp;</type>
        <definition>NeoN::la::LinearSystem&lt; ValueType, IndexType &gt; &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::assemble</definition>
        <argsstring>()</argsstring>
        <name>assemble</name>
        <qualifiedname>FoamAdapter::Expression::assemble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="75" column="28" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a350c68b8ce406f1027e73f688deb4af4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const NeoN::Executor &amp;</type>
        <definition>const NeoN::Executor &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>FoamAdapter::Expression::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="81" column="26" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a653dd3c9f333fde6b2af0b1f9150d19d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FoamAdapter::Expression&lt; ValueType, IndexType &gt;::setReference</definition>
        <argsstring>(NeoN::localIdx pRefCell, NeoN::scalar pRefValue)</argsstring>
        <name>setReference</name>
        <qualifiedname>FoamAdapter::Expression::setReference</qualifiedname>
        <param>
          <type>NeoN::localIdx</type>
          <declname>pRefCell</declname>
        </param>
        <param>
          <type>NeoN::scalar</type>
          <declname>pRefValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="115" column="10" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a4fb07c37a5aa1cfee93213a024007fe4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NeoN::la::SolverStats</type>
        <definition>NeoN::la::SolverStats FoamAdapter::Expression&lt; ValueType, IndexType &gt;::solve</definition>
        <argsstring>()</argsstring>
        <name>solve</name>
        <qualifiedname>FoamAdapter::Expression::solve</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="122" column="27" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="122" bodyend="138"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="22" column="1" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="23" bodyend="151"/>
    <listofallmembers>
      <member refid="classFoamAdapter_1_1Expression_1a6024ec042022f9f5ea7cfd0abf9c9df7" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>assemble</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a350c68b8ce406f1027e73f688deb4af4" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>exec</name></member>
      <member refid="classFoamAdapter_1_1Expression_1aa9db9fee102366444c7d36952e42af16" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>expr_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a12e4c8ac5f3f70fbb35c4ff4576ccee6" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>Expression</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a20227f6f2989729b84237dbae9c8a71d" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>Expression</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a81d5718d028b71ee22ff2a259d4d30dc" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>getField</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a0ce11c16c1f569c2a3c87348d8c124b4" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>getField</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a16c7d18b9f295ae6ceb255def5c6d5fd" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>linearSystem</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a1531aefa9f947598726d237b7a810414" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>linearSystem</name></member>
      <member refid="classFoamAdapter_1_1Expression_1ae749b759232256cbf291955529041049" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>ls_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a643038f7994223fcedc283e5933617ad" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>needReference_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a2b89c32573b0ef5db15d21a3a77c550b" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>pRefCell_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1ab6fe2c8fd03041c6d4905327ae91708e" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>pRefValue_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a84ef45e5193a61c0a1d4a12494f4bb99" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>psi_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a9e9a5051707454ae6e20accb3b5d0087" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>runTime_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a653dd3c9f333fde6b2af0b1f9150d19d" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>setReference</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a4fb07c37a5aa1cfee93213a024007fe4" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>solve</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a855cf32c23315ea3cc202e7bb1cd89d5" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>sparsityPattern</name></member>
      <member refid="classFoamAdapter_1_1Expression_1ac2d758fab6b59809217c93f8be7d86d9" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>sparsityPattern_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1ab44df57ad5332bf2175516a9f482ba6d" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>VolumeField</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a8b2c4ff8f856720be0d862b2092c4b9a" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>~Expression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
