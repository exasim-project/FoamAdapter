<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classFoamAdapter_1_1Expression" kind="class" language="C++" prot="public">
    <compoundname>FoamAdapter::Expression</compoundname>
    <includes refid="expression_8hpp" local="no">expression.hpp</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">typename</ref> <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref></type>
      </param>
      <param>
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">typename</ref> <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">IndexType</ref></type>
        <defval>NeoN::localIdx</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1ae9f3b602670d5eaa20006448d2019ff3" prot="private" static="no" mutable="no">
        <type>NeoN::finiteVolume::cellCentred::VolumeField&lt; <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref> &gt; &amp;</type>
        <definition>NeoN::finiteVolume::cellCentred::VolumeField&lt;ValueType&gt;&amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::psi_</definition>
        <argsstring></argsstring>
        <name>psi_</name>
        <qualifiedname>FoamAdapter::Expression::psi_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="190" column="50" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1a7917dd8a628a6f31e9687665238ba654" prot="private" static="no" mutable="no">
        <type>NeoN::dsl::Expression&lt; <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref> &gt;</type>
        <definition>NeoN::dsl::Expression&lt;ValueType&gt; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::expr_</definition>
        <argsstring></argsstring>
        <name>expr_</name>
        <qualifiedname>FoamAdapter::Expression::expr_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="191" column="27" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1aca566ab08c8107c9d8b218f45133a3f4" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::Dictionary &amp;</type>
        <definition>const NeoN::Dictionary&amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::fvSchemes_</definition>
        <argsstring></argsstring>
        <name>fvSchemes_</name>
        <qualifiedname>FoamAdapter::Expression::fvSchemes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="192" column="28" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1a679aaf58a816276dd991460b185adc8c" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::Dictionary &amp;</type>
        <definition>const NeoN::Dictionary&amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::fvSolution_</definition>
        <argsstring></argsstring>
        <name>fvSolution_</name>
        <qualifiedname>FoamAdapter::Expression::fvSolution_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="193" column="28" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1a1c52c355a554dd9ed3c496319a58f4af" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; NeoN::finiteVolume::cellCentred::SparsityPattern &gt;</type>
        <definition>std::shared_ptr&lt;NeoN::finiteVolume::cellCentred::SparsityPattern&gt; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::sparsityPattern_</definition>
        <argsstring></argsstring>
        <name>sparsityPattern_</name>
        <qualifiedname>FoamAdapter::Expression::sparsityPattern_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="194" column="21" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classFoamAdapter_1_1Expression_1ae749b759232256cbf291955529041049" prot="private" static="no" mutable="no">
        <type>NeoN::la::LinearSystem&lt; <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref>, <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">IndexType</ref> &gt;</type>
        <definition>NeoN::la::LinearSystem&lt;ValueType, IndexType&gt; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::ls_</definition>
        <argsstring></argsstring>
        <name>ls_</name>
        <qualifiedname>FoamAdapter::Expression::ls_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="195" column="28" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a151e92d3b0a04031d20cb886ddf7813f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::Expression&lt; ValueType, IndexType &gt;::Expression</definition>
        <argsstring>(dsl::Expression&lt; ValueType &gt; expr, NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt; &amp;psi, const NeoN::Dictionary &amp;fvSchemes, const NeoN::Dictionary &amp;fvSolution)</argsstring>
        <name>Expression</name>
        <qualifiedname>FoamAdapter::Expression::Expression</qualifiedname>
        <param>
          <type>dsl::Expression&lt; <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref> &gt;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>NeoN::finiteVolume::cellCentred::VolumeField&lt; <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref> &gt; &amp;</type>
          <declname>psi</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::Dictionary &amp;</type>
          <declname>fvSchemes</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::Dictionary &amp;</type>
          <declname>fvSolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="25" column="5" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="25" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a3737bbd6556d604c259757db250f7bb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::Expression&lt; ValueType, IndexType &gt;::Expression</definition>
        <argsstring>(const Expression &amp;ls)</argsstring>
        <name>Expression</name>
        <qualifiedname>FoamAdapter::Expression::Expression</qualifiedname>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> <ref refid="classFoamAdapter_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="47" column="5" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="47" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a8b2c4ff8f856720be0d862b2092c4b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FoamAdapter::Expression&lt; ValueType, IndexType &gt;::~Expression</definition>
        <argsstring>()=default</argsstring>
        <name>~Expression</name>
        <qualifiedname>FoamAdapter::Expression::~Expression</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="55" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a16c7d18b9f295ae6ceb255def5c6d5fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NeoN::la::LinearSystem&lt; <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref>, <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">IndexType</ref> &gt; &amp;</type>
        <definition>NeoN::la::LinearSystem&lt; ValueType, IndexType &gt; &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::linearSystem</definition>
        <argsstring>()</argsstring>
        <name>linearSystem</name>
        <qualifiedname>FoamAdapter::Expression::linearSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="57" column="29" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a9e8e22633a42fd0e59d9f9e3b4c9b4e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NeoN::finiteVolume::cellCentred::SparsityPattern &amp;</type>
        <definition>NeoN::finiteVolume::cellCentred::SparsityPattern &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::sparsityPattern</definition>
        <argsstring>()</argsstring>
        <name>sparsityPattern</name>
        <qualifiedname>FoamAdapter::Expression::sparsityPattern</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="58" column="55" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1adb716afa4a18c7222f6b1408cdae32b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NeoN::finiteVolume::cellCentred::VolumeField&lt; <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref> &gt; &amp;</type>
        <definition>NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt; &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::getVector</definition>
        <argsstring>()</argsstring>
        <name>getVector</name>
        <qualifiedname>FoamAdapter::Expression::getVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="67" column="50" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a009f1ff42847bf2d7595792930041e6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::finiteVolume::cellCentred::VolumeField&lt; <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref> &gt; &amp;</type>
        <definition>const NeoN::finiteVolume::cellCentred::VolumeField&lt; ValueType &gt; &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::getVector</definition>
        <argsstring>() const</argsstring>
        <name>getVector</name>
        <qualifiedname>FoamAdapter::Expression::getVector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="69" column="56" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a1531aefa9f947598726d237b7a810414" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::la::LinearSystem&lt; <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref>, <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">IndexType</ref> &gt; &amp;</type>
        <definition>const NeoN::la::LinearSystem&lt; ValueType, IndexType &gt; &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::linearSystem</definition>
        <argsstring>() const</argsstring>
        <name>linearSystem</name>
        <qualifiedname>FoamAdapter::Expression::linearSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="74" column="35" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a96e96a40a74664c242b69726e75f3715" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::finiteVolume::cellCentred::SparsityPattern &amp;</type>
        <definition>const NeoN::finiteVolume::cellCentred::SparsityPattern &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::sparsityPattern</definition>
        <argsstring>() const</argsstring>
        <name>sparsityPattern</name>
        <qualifiedname>FoamAdapter::Expression::sparsityPattern</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="78" column="61" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="78" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a350c68b8ce406f1027e73f688deb4af4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> NeoN::Executor &amp;</type>
        <definition>const NeoN::Executor &amp; FoamAdapter::Expression&lt; ValueType, IndexType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>FoamAdapter::Expression::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="87" column="26" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a13c52bda6ecc679a32fba0a32736977c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">void</ref></type>
        <definition>void FoamAdapter::Expression&lt; ValueType, IndexType &gt;::assemble</definition>
        <argsstring>(NeoN::scalar t, NeoN::scalar dt)</argsstring>
        <name>assemble</name>
        <qualifiedname>FoamAdapter::Expression::assemble</qualifiedname>
        <param>
          <type>NeoN::scalar</type>
          <declname>t</declname>
        </param>
        <param>
          <type>NeoN::scalar</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="90" column="10" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="90" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a9b92f687be098c4e645f47111fce07c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">void</ref></type>
        <definition>void FoamAdapter::Expression&lt; ValueType, IndexType &gt;::assemble</definition>
        <argsstring>()</argsstring>
        <name>assemble</name>
        <qualifiedname>FoamAdapter::Expression::assemble</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="110" column="10" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="110" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a64c5b8b6cb311a71dbd4b9b148db4d91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">void</ref></type>
        <definition>void FoamAdapter::Expression&lt; ValueType, IndexType &gt;::solve</definition>
        <argsstring>(NeoN::scalar, NeoN::scalar)</argsstring>
        <name>solve</name>
        <qualifiedname>FoamAdapter::Expression::solve</qualifiedname>
        <param>
          <type>NeoN::scalar</type>
        </param>
        <param>
          <type>NeoN::scalar</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="144" column="10" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="144" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classFoamAdapter_1_1Expression_1a8ed934777e6059677c60d31b9c2f4c40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">void</ref></type>
        <definition>void FoamAdapter::Expression&lt; ValueType, IndexType &gt;::setReference</definition>
        <argsstring>(const IndexType refCell, ValueType refValue)</argsstring>
        <name>setReference</name>
        <qualifiedname>FoamAdapter::Expression::setReference</qualifiedname>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">const</ref> <ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">IndexType</ref></type>
          <declname>refCell</declname>
        </param>
        <param>
          <type><ref refid="namespaceFoamAdapter_1a85ee45e2838ec7c393a73b49c59ca7a5" kindref="member">ValueType</ref></type>
          <declname>refValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="169" column="10" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="169" bodyend="186"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" line="21" column="1" bodyfile="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp" bodystart="22" bodyend="196"/>
    <listofallmembers>
      <member refid="classFoamAdapter_1_1Expression_1a13c52bda6ecc679a32fba0a32736977c" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>assemble</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a9b92f687be098c4e645f47111fce07c0" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>assemble</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a350c68b8ce406f1027e73f688deb4af4" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>exec</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a7917dd8a628a6f31e9687665238ba654" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>expr_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a151e92d3b0a04031d20cb886ddf7813f" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>Expression</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a3737bbd6556d604c259757db250f7bb0" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>Expression</name></member>
      <member refid="classFoamAdapter_1_1Expression_1aca566ab08c8107c9d8b218f45133a3f4" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>fvSchemes_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a679aaf58a816276dd991460b185adc8c" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>fvSolution_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1adb716afa4a18c7222f6b1408cdae32b1" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>getVector</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a009f1ff42847bf2d7595792930041e6b" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>getVector</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a16c7d18b9f295ae6ceb255def5c6d5fd" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>linearSystem</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a1531aefa9f947598726d237b7a810414" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>linearSystem</name></member>
      <member refid="classFoamAdapter_1_1Expression_1ae749b759232256cbf291955529041049" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>ls_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1ae9f3b602670d5eaa20006448d2019ff3" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>psi_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a8ed934777e6059677c60d31b9c2f4c40" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>setReference</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a64c5b8b6cb311a71dbd4b9b148db4d91" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>solve</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a9e8e22633a42fd0e59d9f9e3b4c9b4e4" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>sparsityPattern</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a96e96a40a74664c242b69726e75f3715" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>sparsityPattern</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a1c52c355a554dd9ed3c496319a58f4af" prot="private" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>sparsityPattern_</name></member>
      <member refid="classFoamAdapter_1_1Expression_1a8b2c4ff8f856720be0d862b2092c4b9a" prot="public" virt="non-virtual"><scope>FoamAdapter::Expression</scope><name>~Expression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
