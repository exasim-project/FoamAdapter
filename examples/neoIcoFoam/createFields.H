// SPDX-License-Identifier: GPL-3.0-or-later
// SPDX-FileCopyrightText: 2025 FoamAdapter authors

Info << "Reading transportProperties\n" << endl;

Foam::IOdictionary transportProperties(Foam::IOobject(
    "transportProperties",
    runTime.constant(),
    mesh,
    Foam::IOobject::MUST_READ_IF_MODIFIED,
    Foam::IOobject::NO_WRITE
));

Foam::dimensionedScalar viscosity("nu", Foam::dimViscosity, transportProperties);

Info << "Reading field p\n" << endl;
Foam::volScalarField
    ofp(Foam::IOobject(
            "p",
            runTime.timeName(),
            mesh,
            Foam::IOobject::MUST_READ,
            Foam::IOobject::NO_WRITE,
            Foam::IOobject::NO_REGISTER
        ),
        mesh);


Info << "Reading field U\n" << endl;
Foam::volVectorField
    ofU(Foam::IOobject(
            "U",
            runTime.timeName(),
            mesh,
            Foam::IOobject::MUST_READ,
            Foam::IOobject::NO_WRITE,
            Foam::IOobject::NO_REGISTER
        ),
        mesh);


Info << "Reading/calculating face flux field phi\n" << endl;

Foam::surfaceScalarField ofphi(
    Foam::IOobject(
        "phi",
        runTime.timeName(),
        mesh,
        Foam::IOobject::READ_IF_PRESENT,
        Foam::IOobject::NO_WRITE,
        Foam::IOobject::NO_REGISTER
    ),
    fvc::flux(ofU)
);


Foam::label pRefCell = 0;
Foam::scalar pRefValue = 0.0;
setRefCell(ofp, mesh.solutionDict().subDict("PISO"), pRefCell, pRefValue);
// mesh.setFluxRequired(p.name());
