<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="expression_8hpp" kind="file" language="C++">
    <compoundname>expression.hpp</compoundname>
    <includes local="yes">NeoN/NeoN.hpp</includes>
    <includes refid="runTime_8hpp" local="yes">FoamAdapter/datastructures/runTime.hpp</includes>
    <includes refid="fvSolution_8hpp" local="yes">FoamAdapter/compatibility/fvSolution.hpp</includes>
    <includedby refid="pressureVelocityCoupling_8hpp" local="yes">/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/algorithms/pressureVelocityCoupling.hpp</includedby>
    <incdepgraph>
      <node id="10">
        <label>FoamAdapter/auxiliary/convert.hpp</label>
        <link refid="convert_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>FoamAdapter/auxiliary/readers.hpp</label>
        <link refid="readers_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>FoamAdapter/auxiliary/type_conversion.hpp</label>
        <link refid="type__conversion_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>FoamAdapter/compatibility/fvSolution.hpp</label>
        <link refid="fvSolution_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp</label>
        <link refid="expression_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>FoamAdapter/datastructures/meshAdapter.hpp</label>
        <link refid="meshAdapter_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>FoamAdapter/datastructures/runTime.hpp</label>
        <link refid="runTime_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>NeoN/NeoN.hpp</label>
      </node>
      <node id="16">
        <label>NeoN/core/dictionary.hpp</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="4">
        <label>fvMesh.H</label>
      </node>
      <node id="11">
        <label>fvc.H</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="14">
        <label>surfaceFields.H</label>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="13">
        <label>volFields.H</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/algorithms/pressureVelocityCoupling.hpp</label>
        <link refid="pressureVelocityCoupling_8hpp"/>
      </node>
      <node id="1">
        <label>/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp</label>
        <link refid="expression_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classFoamAdapter_1_1PDESolver" prot="public">FoamAdapter::PDESolver</innerclass>
    <innerclass refid="structFoamAdapter_1_1PDESolver_1_1SetReference" prot="public">FoamAdapter::PDESolver::SetReference</innerclass>
    <innernamespace refid="namespaceFoamAdapter">FoamAdapter</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>GPL-3.0-or-later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2025<sp/>FoamAdapter<sp/>authors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>move<sp/>to<sp/>cellCenred<sp/>dsl?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;NeoN/NeoN.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="runTime_8hpp" kindref="compound">FoamAdapter/datastructures/runTime.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fvSolution_8hpp" kindref="compound">FoamAdapter/compatibility/fvSolution.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dsl<sp/>=<sp/>NeoN::dsl;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceFoamAdapter" kindref="compound">FoamAdapter</ref></highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*@brief<sp/>extends<sp/>expression<sp/>by<sp/>giving<sp/>access<sp/>to<sp/>assembled<sp/>matrix</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>@note<sp/>used<sp/>in<sp/>neoIcoFOAM<sp/>directly<sp/>instead<sp/>of<sp/>dsl::expression</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>TODO:<sp/>implement<sp/>flag<sp/>if<sp/>matrix<sp/>is<sp/>assembled<sp/>or<sp/>not<sp/>-&gt;<sp/>if<sp/>not<sp/>assembled<sp/>call<sp/>assemble</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>for<sp/>dependent<sp/>operations<sp/>like<sp/>discrete<sp/>momentum<sp/>fields</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>needs<sp/>storage<sp/>for<sp/>assembled<sp/>matrix?<sp/>and<sp/>whether<sp/>update<sp/>is<sp/>needed<sp/>like<sp/>for<sp/>rAU<sp/>and<sp/>HbyA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexType<sp/>=<sp/>NeoN::localIdx&gt;</highlight></codeline>
<codeline lineno="24" refid="classFoamAdapter_1_1PDESolver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classFoamAdapter_1_1PDESolver" kindref="compound">PDESolver</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">VolumeField<sp/>=<sp/>NeoN::finiteVolume::cellCentred::VolumeField&lt;ValueType&gt;;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classFoamAdapter_1_1PDESolver_1a811245d56b6aeace081eecfb4705935d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFoamAdapter_1_1PDESolver_1a811245d56b6aeace081eecfb4705935d" kindref="member">PDESolver</ref>(dsl::Expression&lt;ValueType&gt;<sp/>expr,<sp/>VolumeField&amp;<sp/>psi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structFoamAdapter_1_1RunTime" kindref="compound">RunTime</ref>&amp;<sp/>runTime)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>psi_(psi)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>expr_(expr)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>runTime_(runTime)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>sparsityPattern_(NeoN::la::SparsityPattern::readOrCreate(psi.mesh()))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ls_(NeoN::la::createEmptyLinearSystem&lt;ValueType,<sp/>NeoN::localIdx&gt;(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi.mesh(),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparsityPattern_</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_.read(runTime_.<ref refid="structFoamAdapter_1_1RunTime_1aa26f4fc2282444bc102496f85c57f879" kindref="member">fvSchemesDict</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classFoamAdapter_1_1PDESolver_1a66ea4cf1544b19dc4b85cbd648339ad4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFoamAdapter_1_1PDESolver_1a66ea4cf1544b19dc4b85cbd648339ad4" kindref="member">PDESolver</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classFoamAdapter_1_1PDESolver" kindref="compound">PDESolver</ref>&amp;<sp/>expr)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>psi_(expr.psi_)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>expr_(expr.expr_)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>runTime_(expr.runTime_)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>ls_(expr.ls_)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>sparsityPattern_(expr.sparsityPattern_)<sp/>{};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classFoamAdapter_1_1PDESolver_1ad1b1411b4c9dafa3af5db57b8a63d772" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classFoamAdapter_1_1PDESolver_1ad1b1411b4c9dafa3af5db57b8a63d772" kindref="member">~PDESolver</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classFoamAdapter_1_1PDESolver_1a6742356899c5ad7183053196aaa07463" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VolumeField&amp;<sp/><ref refid="classFoamAdapter_1_1PDESolver_1a6742356899c5ad7183053196aaa07463" kindref="member">getField</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;psi_;<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classFoamAdapter_1_1PDESolver_1a1a16a48f6a6de5290dbb57188a2e6b99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VolumeField&amp;<sp/><ref refid="classFoamAdapter_1_1PDESolver_1a1a16a48f6a6de5290dbb57188a2e6b99" kindref="member">getField</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;psi_;<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classFoamAdapter_1_1PDESolver_1a6fdf76bf239ca49b3cea5e3192a15ad8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NeoN::la::SparsityPattern&amp;<sp/><ref refid="classFoamAdapter_1_1PDESolver_1a6fdf76bf239ca49b3cea5e3192a15ad8" kindref="member">sparsityPattern</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="58"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sparsityPattern_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classFoamAdapter_1_1PDESolver_1ac35b64b2d576f9889564e4597be2906e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>NeoN::la::LinearSystem&lt;ValueType,<sp/>IndexType&gt;&amp;<sp/><ref refid="classFoamAdapter_1_1PDESolver_1ac35b64b2d576f9889564e4597be2906e" kindref="member">linearSystem</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ls_;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classFoamAdapter_1_1PDESolver_1a5952a2749774464c282bda15df63a3e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NeoN::la::LinearSystem&lt;ValueType,<sp/>IndexType&gt;&amp;<sp/><ref refid="classFoamAdapter_1_1PDESolver_1a5952a2749774464c282bda15df63a3e7" kindref="member">linearSystem</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="65"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ls_;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classFoamAdapter_1_1PDESolver_1a5c43f1d9dcf9da6d4666bb2c244d4972" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NeoN::la::LinearSystem&lt;ValueType,<sp/>IndexType&gt;&amp;<sp/><ref refid="classFoamAdapter_1_1PDESolver_1a5c43f1d9dcf9da6d4666bb2c244d4972" kindref="member">assemble</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_.assemble(runTime_.<ref refid="structFoamAdapter_1_1RunTime_1ae5965b4f1cf14cc8d7c6d2a00148c4b5" kindref="member">t</ref>,<sp/>runTime_.<ref refid="structFoamAdapter_1_1RunTime_1a0f9b142b1c4951e919e1b750f93ebc14" kindref="member">dt</ref>,<sp/>sparsityPattern_,<sp/>ls_);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ls_;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classFoamAdapter_1_1PDESolver_1a3329ce27b2f393b13af7fd732e431901" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NeoN::Executor&amp;<sp/><ref refid="classFoamAdapter_1_1PDESolver_1a3329ce27b2f393b13af7fd732e431901" kindref="member">exec</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ls_.exec();<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FunctorValueType&gt;</highlight></codeline>
<codeline lineno="79" refid="structFoamAdapter_1_1PDESolver_1_1SetReference" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structFoamAdapter_1_1PDESolver_1_1SetReference" kindref="compound">SetReference</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>NeoN::dsl::PostAssemblyBase&lt;ValueType&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1a3889bb614c28806145995a767cc2d162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NeoN::localIdx<sp/><ref refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1a3889bb614c28806145995a767cc2d162" kindref="member">pRefCell_</ref>;</highlight></codeline>
<codeline lineno="83" refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1a46a354ba29700cf6251c2925f8ea5255" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NeoN::scalar<sp/><ref refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1a46a354ba29700cf6251c2925f8ea5255" kindref="member">pRefValue_</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1a099c97ef8bee51fc13c6a55badaa8ad5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1a099c97ef8bee51fc13c6a55badaa8ad5" kindref="member">SetReference</ref>(NeoN::localIdx<sp/>pRefCell,<sp/>NeoN::scalar<sp/>pRefValue)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1a3889bb614c28806145995a767cc2d162" kindref="member">pRefCell_</ref>(pRefCell)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1a46a354ba29700cf6251c2925f8ea5255" kindref="member">pRefValue_</ref>(pRefValue)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1ac42674accaea9ddcdd0c40e74a3c90a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1ac42674accaea9ddcdd0c40e74a3c90a5" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NeoN::la::SparsityPattern&amp;<sp/>sp,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NeoN::la::LinearSystem&lt;FunctorValueType,<sp/>NeoN::localIdx&gt;&amp;<sp/>ls</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>diagOffset<sp/>=<sp/>sp.diagOffset().view();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rowOffs<sp/>=<sp/>ls.matrix().rowOffs().view();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rhs<sp/>=<sp/>ls.rhs().view();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>values<sp/>=<sp/>ls.matrix().values().view();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NeoN::parallelFor(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ls.exec(),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pRefCell_,<sp/>pRefCell_<sp/>+<sp/>1},</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KOKKOS_LAMBDA(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>refCelli)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>diagIdx<sp/>=<sp/>rowOffs[refCelli]<sp/>+<sp/>diagOffset[refCelli];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>diagValue<sp/>=<sp/>values[diagIdx];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs[refCelli]<sp/>+=<sp/>diagValue<sp/>*<sp/><ref refid="structFoamAdapter_1_1PDESolver_1_1SetReference_1a46a354ba29700cf6251c2925f8ea5255" kindref="member">pRefValue_</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values[diagIdx]<sp/>+=<sp/>diagValue;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classFoamAdapter_1_1PDESolver_1a598c12950466b251b83849cca906c8a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classFoamAdapter_1_1PDESolver_1a598c12950466b251b83849cca906c8a5" kindref="member">setReference</ref>(NeoN::localIdx<sp/>pRefCell,<sp/>NeoN::scalar<sp/>pRefValue)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>needReference_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRefCell_<sp/>=<sp/>pRefCell;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pRefValue_<sp/>=<sp/>pRefValue;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>unify<sp/>with<sp/>dsl/solver.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classFoamAdapter_1_1PDESolver_1a99f902362c4f6b16ef8539c72032bb26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NeoN::la::SolverStats<sp/><ref refid="classFoamAdapter_1_1PDESolver_1a99f902362c4f6b16ef8539c72032bb26" kindref="member">solve</ref>()</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>if<sp/>ValueType<sp/>is<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>functs<sp/>=<sp/>std::vector&lt;NeoN::dsl::PostAssemblyBase&lt;ValueType&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/>(std::is_same_v&lt;ValueType,<sp/>NeoN::scalar&gt;)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functs<sp/>=<sp/>needReference_<sp/>?<sp/>std::vector&lt;NeoN::dsl::PostAssemblyBase&lt;ValueType&gt;&gt;<sp/>{}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::vector&lt;NeoN::dsl::PostAssemblyBase&lt;ValueType&gt;&gt;<sp/>{SetReference&lt;ValueType&gt;(pRefCell_,<sp/>pRefValue_)};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME<sp/>TODO<sp/>this<sp/>will<sp/>create<sp/>the<sp/>sparsity<sp/>pattern<sp/>and<sp/>potentially<sp/>the<sp/>ls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>again<sp/>even<sp/>if<sp/>it<sp/>has<sp/>been<sp/>created<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>solverDict<sp/>=<sp/>runTime_.<ref refid="structFoamAdapter_1_1RunTime_1ab23e48dafc6eee85ecfb0c8d36c96710" kindref="member">fvSolutionDict</ref>.get&lt;NeoN::Dictionary&gt;(</highlight><highlight class="stringliteral">&quot;solvers&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldSolverDict<sp/><sp/>=<sp/>solverDict.get&lt;NeoN::Dictionary&gt;(psi_.name);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stats<sp/>=<sp/>NeoN::dsl::detail::iterativeSolveImpl(</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparsityPattern_,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ls_,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi_,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runTime_.<ref refid="structFoamAdapter_1_1RunTime_1ae5965b4f1cf14cc8d7c6d2a00148c4b5" kindref="member">t</ref>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runTime_.<ref refid="structFoamAdapter_1_1RunTime_1a0f9b142b1c4951e919e1b750f93ebc14" kindref="member">dt</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runTime_.<ref refid="structFoamAdapter_1_1RunTime_1aa26f4fc2282444bc102496f85c57f879" kindref="member">fvSchemesDict</ref>,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldSolverDict,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functs</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[NeoN]<sp/>Solving<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>psi_.name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Initial<sp/>residual:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stats.initResNorm</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Final<sp/>residual:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stats.finalResNorm</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>No<sp/>Iterations:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stats.numIter</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stats;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classFoamAdapter_1_1PDESolver_1a4ea6ee144ff50d822460b04e961dd880" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>NeoN::la::SolverStats<sp/><ref refid="classFoamAdapter_1_1PDESolver_1a4ea6ee144ff50d822460b04e961dd880" kindref="member">solve</ref>(dsl::SpatialOperator&lt;NeoN::Vec3&gt;&amp;&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expr_.addOperator(-1.0<sp/>*<sp/>rhs);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classFoamAdapter_1_1PDESolver_1a99f902362c4f6b16ef8539c72032bb26" kindref="member">solve</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>VolumeField&amp;<sp/>psi_;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>dsl::Expression&lt;ValueType&gt;<sp/>expr_;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structFoamAdapter_1_1RunTime" kindref="compound">RunTime</ref>&amp;<sp/>runTime_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NeoN::la::SparsityPattern&amp;<sp/>sparsityPattern_;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>NeoN::la::LinearSystem&lt;ValueType,<sp/>IndexType&gt;<sp/>ls_;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needReference_;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>NeoN::localIdx<sp/>pRefCell_;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>NeoN::scalar<sp/>pRefValue_;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">};</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexType<sp/>=<sp/>NeoN::localIdx&gt;</highlight></codeline>
<codeline lineno="175" refid="namespaceFoamAdapter_1a13b42389ef03dfeb668a50344c66743c" refkind="member"><highlight class="normal">NeoN::Vector&lt;ValueType&gt;<sp/><ref refid="namespaceFoamAdapter_1a13b42389ef03dfeb668a50344c66743c" kindref="member">diag</ref>(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>la::LinearSystem&lt;ValueType,<sp/>IndexType&gt;&amp;<sp/>ls,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NeoN::la::SparsityPattern&amp;<sp/>sparsityPattern</highlight></codeline>
<codeline lineno="178"><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>NeoN::Vector&lt;ValueType&gt;<sp/>diagonal(ls.exec(),<sp/>sparsityPattern.diagOffset().size(),<sp/>0.0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>diagView<sp/>=<sp/>diagonal.view();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>diagOffset<sp/>=<sp/>sparsityPattern.diagOffset().view();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[matrix,<sp/>b]<sp/>=<sp/>ls.view();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>NeoN::parallelFor(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ls.exec(),</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{0,<sp/>diagOffset.size()},</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KOKKOS_LAMBDA(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::size_t<sp/>celli)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>diagOffsetCelli<sp/>=<sp/>diagOffset[celli];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diagView[celli]<sp/>=<sp/>matrix.values[matrix.rowOffs[celli]<sp/>+<sp/>diagOffsetCelli];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>diagonal;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexType<sp/>=<sp/>NeoN::localIdx&gt;</highlight></codeline>
<codeline lineno="198" refid="namespaceFoamAdapter_1a67a615e0cb1de634ffc9df635d48775e" refkind="member"><highlight class="normal">NeoN::finiteVolume::cellCentred::VolumeField&lt;ValueType&gt;<sp/><ref refid="namespaceFoamAdapter_1a67a615e0cb1de634ffc9df635d48775e" kindref="member">applyOperator</ref>(</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>la::LinearSystem&lt;ValueType,<sp/>IndexType&gt;&amp;<sp/>ls,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NeoN::finiteVolume::cellCentred::VolumeField&lt;ValueType&gt;&amp;<sp/>psi</highlight></codeline>
<codeline lineno="201"><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>NeoN::finiteVolume::cellCentred::VolumeField&lt;ValueType&gt;<sp/>res(</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi.exec(),</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ls_&quot;</highlight><highlight class="normal"><sp/>+<sp/>psi.name,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi.mesh(),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi.internalVector(),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi.boundaryData(),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psi.boundaryConditions()</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>NeoN::la::computeResidual(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ls.matrix(),<sp/>ls.rhs(),<sp/>psi.internalVector(),<sp/>res.internalVector());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IndexType<sp/>=<sp/>NeoN::localIdx&gt;</highlight></codeline>
<codeline lineno="218" refid="namespaceFoamAdapter_1ae9a1e4d59d70d0d025f38cf80b964bf1" refkind="member"><highlight class="normal">NeoN::finiteVolume::cellCentred::VolumeField&lt;ValueType&gt;<sp/><ref refid="namespaceFoamAdapter_1ae9a1e4d59d70d0d025f38cf80b964bf1" kindref="member">operator&amp;</ref>(</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classFoamAdapter_1_1PDESolver" kindref="compound">PDESolver&lt;ValueType, IndexType&gt;</ref><sp/>expr,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NeoN::finiteVolume::cellCentred::VolumeField&lt;ValueType&gt;&amp;<sp/>psi</highlight></codeline>
<codeline lineno="221"><highlight class="normal">)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceFoamAdapter_1a67a615e0cb1de634ffc9df635d48775e" kindref="member">applyOperator</ref>(expr.<ref refid="classFoamAdapter_1_1PDESolver_1ac35b64b2d576f9889564e4597be2906e" kindref="member">linearSystem</ref>(),<sp/>psi);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/FoamAdapter/FoamAdapter/include/FoamAdapter/datastructures/expression.hpp"/>
  </compounddef>
</doxygen>
